name: "Install SDL Packages"
description: "Install SDL packages"
author: "Scott Doxey @neogeek"
branding:
  color: blue
  icon: upload-cloud

inputs:
  SDL_VERSION:
    description: "SDL version"
    required: false
    default: "2.32.8"
  CACHE_SDL:
    description: "If the action should cache the SDL files."
    required: false
    default: "true"
  SDL_IMAGE_VERSION:
    description: "SDL_image version"
    required: false
    default: "2.8.8"
  CACHE_SDL_IMAGE:
    description: "If the action should cache the SDL_image files."
    required: false
    default: "true"
  SDL_TTF_VERSION:
    description: "SDL_ttf version"
    required: false
    default: "2.24.0"
  CACHE_SDL_TTF:
    description: "If the action should cache the SDL_ttf files."
    required: false
    default: "true"
  SDL_MIXER_VERSION:
    description: "SDL_mixer version"
    required: false
    default: "2.8.1"
  CACHE_SDL_MIXER:
    description: "If the action should cache the SDL_mixer files."
    required: false
    default: "true"

runs:
  using: composite
  steps:
    - name: Install CMake
      shell: bash
      run: |
        sudo apt-get update
        sudo sudo apt-get install -y build-essential git make \
          pkg-config cmake ninja-build gnome-desktop-testing libasound2-dev libpulse-dev \
          libaudio-dev libjack-dev libsndio-dev libx11-dev libxext-dev \
          libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev libxss-dev libxtst-dev \
          libxkbcommon-dev libdrm-dev libgbm-dev libgl1-mesa-dev libgles2-mesa-dev \
          libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev

    - if: ${{ inputs.SDL_VERSION != '' }}
      name: Restore SDL Cache
      uses: actions/cache/restore@v4.2.0
      id: cache-sdl
      with:
        path: /tmp/.sdl/SDL-${{ inputs.SDL_VERSION }}
        key: sdl-${{ inputs.SDL_VERSION }}-${{ runner.os }}

    - if: ${{ inputs.SDL_VERSION != '' && steps.cache-sdl.outputs.cache-hit != 'true' }}
      name: Install SDL
      shell: bash
      run: |
        mkdir -p /tmp/.sdl
        cd /tmp/.sdl
        if [[ "${{ inputs.SDL_VERSION }}" == 2* ]]; then
          curl -L https://github.com/libsdl-org/SDL/releases/download/release-${{ inputs.SDL_VERSION }}/SDL2-${{ inputs.SDL_VERSION }}.tar.gz > SDL.tar.gz
        elif [[ "${{ inputs.SDL_VERSION }}" == 3* ]]; then
          curl -L https://github.com/libsdl-org/SDL/releases/download/release-${{ inputs.SDL_VERSION }}/SDL3-${{ inputs.SDL_VERSION }}.tar.gz > SDL.tar.gz
        else
          echo "Unsupported SDL version: ${{ inputs.SDL_VERSION }}"
          exit 1
        fi
        mkdir SDL-${{ inputs.SDL_VERSION }}
        tar -xzvf SDL.tar.gz --strip-components=1 -C SDL-${{ inputs.SDL_VERSION }}
        cd SDL-${{ inputs.SDL_VERSION }}
        if [[ "${{ inputs.SDL_VERSION }}" == 2* ]]; then
          ./configure --prefix=/tmp/.sdl/SDL-${{ inputs.SDL_VERSION }}
        elif [[ "${{ inputs.SDL_VERSION }}" == 3* ]]; then
          mkdir build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=/tmp/.sdl/SDL-${{ inputs.SDL_VERSION }} -DCMAKE_BUILD_TYPE=Release -DSDL_SHARED=ON -DSDL_STATIC=ON
        else
          echo "Unsupported SDL version: ${{ inputs.SDL_VERSION }}"
          exit 1
        fi
        make -j$(nproc)
        make install

    - if: ${{ inputs.SDL_VERSION != '' && inputs.CACHE_SDL != 'false' && steps.cache-sdl.outputs.cache-hit != 'true' }}
      name: Store SDL Cache
      uses: actions/cache/save@v4.2.0
      with:
        path: /tmp/.sdl/SDL-${{ inputs.SDL_VERSION }}
        key: sdl-${{ inputs.SDL_VERSION }}-${{ runner.os }}

    - if: ${{ inputs.SDL_IMAGE_VERSION != '' }}
      name: Restore SDL_image Cache
      uses: actions/cache/restore@v4.2.0
      id: cache-sdl-image
      with:
        path: /tmp/.sdl/SDL_image-${{ inputs.SDL_IMAGE_VERSION }}
        key: sdl-image-${{ inputs.SDL_IMAGE_VERSION }}-${{ runner.os }}

    - if: ${{ inputs.SDL_IMAGE_VERSION != '' && steps.cache-sdl-image.outputs.cache-hit != 'true' }}
      name: Install SDL_image
      shell: bash
      run: |
        mkdir -p /tmp/.sdl
        cd /tmp/.sdl
        if [[ "${{ inputs.SDL_IMAGE_VERSION }}" == 2* ]]; then
          curl -L https://github.com/libsdl-org/SDL_image/releases/download/release-${{ inputs.SDL_IMAGE_VERSION }}/SDL2_image-${{ inputs.SDL_IMAGE_VERSION }}.tar.gz > SDL_image.tar.gz
        elif [[ "${{ inputs.SDL_IMAGE_VERSION }}" == 3* ]]; then
          curl -L https://github.com/libsdl-org/SDL_image/releases/download/release-${{ inputs.SDL_IMAGE_VERSION }}/SDL3_image-${{ inputs.SDL_IMAGE_VERSION }}.tar.gz > SDL_image.tar.gz
        else
          echo "Unsupported SDL_image version: ${{ inputs.SDL_IMAGE_VERSION }}"
          exit 1
        fi
        mkdir SDL_image-${{ inputs.SDL_IMAGE_VERSION }}
        tar -xzvf SDL_image.tar.gz --strip-components=1 -C SDL_image-${{ inputs.SDL_IMAGE_VERSION }}
        cd SDL_image-${{ inputs.SDL_IMAGE_VERSION }}
        if [[ "${{ inputs.SDL_IMAGE_VERSION }}" == 2* ]]; then
          ./configure --prefix=/tmp/.sdl/SDL_image-${{ inputs.SDL_IMAGE_VERSION }}
        elif [[ "${{ inputs.SDL_IMAGE_VERSION }}" == 3* ]]; then
          mkdir build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=/tmp/.sdl/SDL_image-${{ inputs.SDL_IMAGE_VERSION }} -DCMAKE_BUILD_TYPE=Release -DSDL_SHARED=ON -DSDL_STATIC=ON
        else
          echo "Unsupported SDL_image version: ${{ inputs.SDL_IMAGE_VERSION }}"
          exit 1
        fi
        make -j$(nproc)
        make install
      env:
        PKG_CONFIG_PATH: /tmp/.sdl/SDL-${{ inputs.SDL_VERSION }}/lib/pkgconfig:$PKG_CONFIG_PATH
        CMAKE_PREFIX_PATH: /tmp/.sdl/SDL-${{ inputs.SDL_VERSION }}:$CMAKE_PREFIX_PATH

    - if: ${{ inputs.SDL_IMAGE_VERSION != '' && inputs.CACHE_SDL_IMAGE != 'false' && steps.cache-sdl-image.outputs.cache-hit != 'true' }}
      name: Store SDL_image Cache
      uses: actions/cache/save@v4.2.0
      with:
        path: /tmp/.sdl/SDL_image-${{ inputs.SDL_IMAGE_VERSION }}
        key: sdl-image-${{ inputs.SDL_IMAGE_VERSION }}-${{ runner.os }}

    - if: ${{ inputs.SDL_TTF_VERSION != '' }}
      name: Restore SDL_ttf Cache
      uses: actions/cache/restore@v4.2.0
      id: cache-sdl-ttf
      with:
        path: /tmp/.sdl/SDL_ttf-${{ inputs.SDL_TTF_VERSION }}
        key: sdl-ttf-${{ inputs.SDL_TTF_VERSION }}-${{ runner.os }}

    - if: ${{ inputs.SDL_TTF_VERSION != '' && steps.cache-sdl-ttf.outputs.cache-hit != 'true' }}
      name: Install SDL_ttf
      shell: bash
      run: |
        mkdir -p /tmp/.sdl
        cd /tmp/.sdl
        if [[ "${{ inputs.SDL_TTF_VERSION }}" == 2* ]]; then
          curl -L https://github.com/libsdl-org/SDL_ttf/releases/download/release-${{ inputs.SDL_TTF_VERSION }}/SDL2_ttf-${{ inputs.SDL_TTF_VERSION }}.tar.gz > SDL_ttf.tar.gz
        elif [[ "${{ inputs.SDL_TTF_VERSION }}" == 3* ]]; then
          curl -L https://github.com/libsdl-org/SDL_ttf/releases/download/release-${{ inputs.SDL_TTF_VERSION }}/SDL3_ttf-${{ inputs.SDL_TTF_VERSION }}.tar.gz > SDL_ttf.tar.gz
        else
          echo "Unsupported SDL_ttf version: ${{ inputs.SDL_TTF_VERSION }}"
          exit 1
        fi
        mkdir SDL_ttf-${{ inputs.SDL_TTF_VERSION }}
        tar -xzvf SDL_ttf.tar.gz --strip-components=1 -C SDL_ttf-${{ inputs.SDL_TTF_VERSION }}
        cd SDL_ttf-${{ inputs.SDL_TTF_VERSION }}
        if [[ "${{ inputs.SDL_TTF_VERSION }}" == 2* ]]; then
          ./configure --prefix=/tmp/.sdl/SDL_ttf-${{ inputs.SDL_TTF_VERSION }}
        elif [[ "${{ inputs.SDL_TTF_VERSION }}" == 3* ]]; then
          mkdir build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=/tmp/.sdl/SDL_ttf-${{ inputs.SDL_TTF_VERSION }} -DCMAKE_BUILD_TYPE=Release -DSDL_SHARED=ON -DSDL_STATIC=ON
        else
          echo "Unsupported SDL_ttf version: ${{ inputs.SDL_TTF_VERSION }}"
          exit 1
        fi
        make -j$(nproc)
        make install
      env:
        PKG_CONFIG_PATH: /tmp/.sdl/SDL-${{ inputs.SDL_VERSION }}/lib/pkgconfig:$PKG_CONFIG_PATH
        CMAKE_PREFIX_PATH: /tmp/.sdl/SDL-${{ inputs.SDL_VERSION }}:$CMAKE_PREFIX_PATH

    - if: ${{ inputs.SDL_TTF_VERSION != '' && inputs.CACHE_SDL_TTF != 'false' && steps.cache-sdl-ttf.outputs.cache-hit != 'true' }}
      name: Store SDL_ttf Cache
      uses: actions/cache/save@v4.2.0
      with:
        path: /tmp/.sdl/SDL_ttf-${{ inputs.SDL_TTF_VERSION }}
        key: sdl-ttf-${{ inputs.SDL_TTF_VERSION }}-${{ runner.os }}

    - if: ${{ inputs.SDL_MIXER_VERSION != '' }}
      name: Restore SDL_mixer Cache
      uses: actions/cache/restore@v4.2.0
      id: cache-sdl-mixer
      with:
        path: /tmp/.sdl/SDL_mixer-${{ inputs.SDL_MIXER_VERSION }}
        key: sdl-mixer-${{ inputs.SDL_MIXER_VERSION }}-${{ runner.os }}

    - if: ${{ inputs.SDL_MIXER_VERSION != '' && steps.cache-sdl-mixer.outputs.cache-hit != 'true' }}
      name: Install SDL_mixer
      shell: bash
      run: |
        mkdir -p /tmp/.sdl
        cd /tmp/.sdl
        if [[ "${{ inputs.SDL_MIXER_VERSION }}" == 2* ]]; then
          curl -L https://github.com/libsdl-org/SDL_mixer/releases/download/release-${{ inputs.SDL_MIXER_VERSION }}/SDL2_mixer-${{ inputs.SDL_MIXER_VERSION }}.tar.gz > SDL_mixer.tar.gz
        elif [[ "${{ inputs.SDL_MIXER_VERSION }}" == 3* ]]; then
          curl -L https://github.com/libsdl-org/SDL_mixer/releases/download/release-${{ inputs.SDL_MIXER_VERSION }}/SDL3_mixer-${{ inputs.SDL_MIXER_VERSION }}.tar.gz > SDL_mixer.tar.gz
        else
          echo "Unsupported SDL_mixer version: ${{ inputs.SDL_MIXER_VERSION }}"
          exit 1
        fi
        mkdir SDL_mixer-${{ inputs.SDL_MIXER_VERSION }}
        tar -xzvf SDL_mixer.tar.gz --strip-components=1 -C SDL_mixer-${{ inputs.SDL_MIXER_VERSION }}
        cd SDL_mixer-${{ inputs.SDL_MIXER_VERSION }}
        if [[ "${{ inputs.SDL_MIXER_VERSION }}" == 2* ]]; then
          ./configure --prefix=/tmp/.sdl/SDL_mixer-${{ inputs.SDL_MIXER_VERSION }}
        elif [[ "${{ inputs.SDL_MIXER_VERSION }}" == 3* ]]; then
          mkdir build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=/tmp/.sdl/SDL_mixer-${{ inputs.SDL_MIXER_VERSION }} -DCMAKE_BUILD_TYPE=Release -DSDL_SHARED=ON -DSDL_STATIC=ON
        else
          echo "Unsupported SDL_mixer version: ${{ inputs.SDL_MIXER_VERSION }}"
          exit 1
        fi
        make -j$(nproc)
        make install
      env:
        PKG_CONFIG_PATH: /tmp/.sdl/SDL-${{ inputs.SDL_VERSION }}/lib/pkgconfig:$PKG_CONFIG_PATH
        CMAKE_PREFIX_PATH: /tmp/.sdl/SDL-${{ inputs.SDL_VERSION }}:$CMAKE_PREFIX_PATH

    - if: ${{ inputs.SDL_MIXER_VERSION != '' && inputs.CACHE_SDL_MIXER != 'false' && steps.cache-sdl-mixer.outputs.cache-hit != 'true' }}
      name: Store SDL_mixer Cache
      uses: actions/cache/save@v4.2.0
      with:
        path: /tmp/.sdl/SDL_mixer-${{ inputs.SDL_MIXER_VERSION }}
        key: sdl-mixer-${{ inputs.SDL_MIXER_VERSION }}-${{ runner.os }}
